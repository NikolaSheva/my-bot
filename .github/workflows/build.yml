---
name: Build with Podman

'on':
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

env:
  REGISTRY: quay.io
  IMAGE_NAME: nikolasheva/my-bot

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache Podman layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildah-cache
          key: ${{ runner.os }}-buildah-${{ hashFiles('Containerfile') }}
          restore-keys: |
            ${{ runner.os }}-buildah-

      - name: Install Podman
        run: |
          sudo apt-get update
          sudo apt-get -y install podman

      - name: Verify Podman
        run: podman --version

      - name: Login to Quay.io
        run: |
          podman login ${{ env.REGISTRY }} \
            -u ${{ secrets.QUAY_USERNAME }} \
            -p ${{ secrets.QUAY_PASSWORD }}

      - name: Build image
        run: |
          podman build \
            --pull-always \
            -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:v1 \
            -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest \
            -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }} \
            -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}: \
            ${{ github.run_number }} \
            -f Containerfile .

      - name: Security scan
        run: |
          podman scan \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }} \
            || true

      - name: Push image
        run: |
          podman push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:v1
          podman push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          podman push \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
      - name: Get image digest
        id: image-digest
        run: |
          IMAGE_TAG="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:v1"
          DIGEST=$(podman inspect --format='{{.Digest}}' "${IMAGE_TAG}")
          echo "digest=$DIGEST" >> $GITHUB_OUTPUT

      - name: Output digest
        run: echo "Image digest:${{ steps.image-digest.outputs.digest }}"
